!function(){"use strict";class e{constructor(e,t,s,r,i){this._name=e.name,this._link=e.link,this._id=e._id,this._cardSelector=t,this._handeImageClick=s,this._handleDeleteClick=r,this._handleLikeClick=i,this.isLiked=e.isLiked}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._cardImageElement.addEventListener("click",(()=>{this._handeImageClick(this._name,this._link)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)}))}checkLikeState(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}toggleLike(){this._likeButton.classList.toggle("card__like-button_active")}removeCard(){this._cardElement.remove(),this._cardElement=null}_getTemplate(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardElement}generateCard(){this._cardElement=this._getTemplate(),this._cardImageElement=this._cardElement.querySelector(".card__image"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__trash-button");const e=this._cardElement.querySelector(".card__title");return this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,e.textContent=this._name,this._setEventListeners(),this.checkLikeState(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=t,this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputElements=[...this._formEl.querySelectorAll(this._inputSelector)]}showErrorMessage(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}hideErrorMessage(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}checkInputValidity(e){e.validity.valid?this.hideErrorMessage(e):this.showErrorMessage(e)}toggleButtonState(){this._inputElements.every((e=>e.validity.valid))?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):this.disableSubmitButton()}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this.checkInputValidity(e),this.toggleButtonState()}))})),this.toggleButtonState()}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault(),console.log("Form submitted.")})),this.setEventListeners()}}class s{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.querySelector(".modal__close-button").addEventListener("click",(()=>this.close())),this._popupElement.addEventListener("mousedown",(e=>{e.target===this._popupElement&&this.close()}))}}class i extends r{constructor(e,t){super(e),this._popupElement=document.querySelector(e),this._handleFormSubmit=t,this._formPopup=this._popupElement.querySelector(".modal__form"),this._inputList=this._formPopup.querySelectorAll(".modal__input"),this._submitButton=this._popupElement.querySelector(".modal__button"),this._defaultButtonText=this._submitButton.textContent}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._defaultButtonText}setEventListeners(){this._formPopup.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}formReset(){this._formPopup.reset()}getForm(){return this._formPopup}}const n={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=document.querySelector("#modal-edit"),a=document.querySelector("#modal-add"),l=(document.querySelector("#modal-trash"),document.querySelector(".profile__add-button")),c=document.querySelector(".profile__avatar-button"),d=(document.querySelectorAll(".modal__close-button"),document.querySelector(".profile")),h=(d.querySelector(".profile__title"),d.querySelector(".profile__subtitle"),o.querySelector("#name")),u=o.querySelector("#subtitle"),_=(o.querySelector("#modal-form-edit"),a.querySelector("#modal-form-add")),m=(_.querySelector("#add-title"),_.querySelector("#image-url"),document.querySelector(".cards__list"),document.querySelector(".profile__edit-button")),p=document.querySelector(".profile__add-button"),E=(document.querySelector(".card__trash-button"),new class{constructor(e,t){this._baseUrl=e,this._headers=t}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>this._checkResponse(e)))}editProfile(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.subtitle})}).then((e=>this._checkResponse(e)))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>this._checkResponse(e)))}createCardAdd(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.title,link:e.url})}).then((e=>this._checkResponse(e)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkResponse(e)))}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}editProfileAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.url})}).then((e=>this._checkResponse(e)))}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}}("https://around-api.en.tripleten-services.com/v1",{authorization:"6e6ca955-c2df-4d70-a35e-af9025599fa8","Content-Type":"application/json"})),f=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:r}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s),this._avatarElement=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}setUserAvatar(e){this._avatarElement.src=e}}({nameSelector:".profile__title",jobSelector:".profile__subtitle",avatarSelector:".profile__avatar"}),v=new i("#modal-edit",(function(e){v.renderLoading(!0),E.editProfile(e).then((e=>{f.setUserInfo({name:e.name,job:e.about}),f.setUserAvatar(e.avatar),v.close()})).catch((e=>{console.error("Error updating profile: ",e)})).finally((()=>{v.renderLoading(!1)}))}));v.setEventListeners();const b=new i("#modal-add",(function(e){b.renderLoading(!0),E.createCardAdd(e).then((e=>{C(e),b.close(),b.formReset()})).catch((e=>{console.error("Error creating card:",e)})).finally((()=>{b.renderLoading(!1)}))}));b.setEventListeners();const S=new class extends r{constructor(e){super(e),this._popupElement=document.querySelector(e),this._imageElement=this._popupElement.querySelector(".modal__image-preview"),this._captionElement=this._popupElement.querySelector(".modal__title-preview")}open(e){this._imageElement.src=e.link,this._imageElement.alt=e.name,this._captionElement.textContent=e.name,super.open()}}("#modal-image");S.setEventListeners();const g=new class extends r{constructor(e){super(e),this._popupElement=document.querySelector(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupElement.querySelector("#save-btn"),this._defaultButtonText=this._submitButton.textContent}setSubmitAction(e){this._handleSubmitCallback=e}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Deleting...";this._submitButton.textContent=e?t:this._defaultButtonText}setEventListeners(){this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmitCallback()})),super.setEventListeners()}}("#modal-trash");g.setEventListeners();const k=new i("#modal-update",(function(e){k.renderLoading(!0),E.editProfileAvatar(e).then((e=>{f.setUserAvatar(e.avatar),k.close(),k.formReset()})).catch((e=>{console.error("Error creating card:",e)})).finally((()=>{k.renderLoading(!1)}))}));function L(e){g.open(),g.setSubmitAction((()=>{g.renderLoading(!0),E.deleteCard(e._id).then((()=>{e.removeCard(),g.close()})).catch((e=>{console.error("Error deleting card:",e)})).finally((()=>{g.renderLoading(!1)}))}))}let y;function C(t){const s=new e(t,"#card-template",((e,t)=>{S.open({name:e,link:t})}),L,q).generateCard();y.addItem(s)}function q(e){e.isLiked?E.dislikeCard(e._id).then((()=>{e.toggleLike(),e.isLiked=!e.isLiked})).catch((e=>{console.error("Error creating card:",e)})):E.likeCard(e._id).then((()=>{e.toggleLike(),e.isLiked=!e.isLiked})).catch((e=>{console.error("Error creating card:",e)}))}k.setEventListeners(),l.addEventListener("click",(()=>{b.open()})),c.addEventListener("click",(()=>{k.open()})),E.getUserInfo().then((e=>{f.setUserInfo({name:e.name,job:e.about}),f.setUserAvatar(e.avatar)})),E.getAppInfo().then((e=>{let[t,r]=e;y=new s({items:t.reverse(),renderer:C},".cards__list"),y.renderItems()})).catch((e=>{console.error("Error loading app info:",e)})),m.addEventListener("click",(()=>{const e=f.getUserInfo();h.value=e.name,u.value=e.job,v.open()}));const B=document.querySelectorAll(".modal__form"),I={};B.forEach((e=>{const s=new t(n,e),r=e.getAttribute("name");I[r]=s,s.enableValidation()})),p.addEventListener("click",(()=>{b.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,