!function(){"use strict";class e{constructor(e,t,s){let{name:n,link:o}=e;this._name=n,this._link=o,this._cardSelector=t,this._handeImageClick=s}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeBtn()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteBtn()})),this._cardImageElement.addEventListener("click",(()=>{this._handeImageClick(this._name,this._link)}))}_handleLikeBtn(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteBtn(){this._cardElement.remove(),this._cardElement=null}_getTemplate(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardElement}generateCard(){this._cardElement=this._getTemplate(),this._cardImageElement=this._cardElement.querySelector(".card__image"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__trash-button");const e=this._cardElement.querySelector(".card__title");return this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,e.textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=t,this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputElements=[...this._formEl.querySelectorAll(this._inputSelector)]}showErrorMessage(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}hideErrorMessage(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}checkInputValidity(e){e.validity.valid?this.hideErrorMessage(e):this.showErrorMessage(e)}toggleButtonState(){this._inputElements.every((e=>e.validity.valid&&""!==e.value))?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):this.disableSubmitButton()}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this.checkInputValidity(e),this.toggleButtonState()}))})),this.toggleButtonState()}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault(),console.log("Form submitted."),this.disableSubmitButton()})),this.setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.querySelector(".modal__close-button").addEventListener("click",(()=>this.close())),this._popupElement.addEventListener("mousedown",(e=>{e.target===this._popupElement&&this.close()}))}}class n extends s{constructor(e,t){super(e),this._popupElement=document.querySelector(e),this._handleFormSubmit=t,this._formPopup=this._popupElement.querySelector(".modal__form"),this._inputList=this._formPopup.querySelectorAll(".modal__input")}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){this._formPopup.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}formReset(){this._formPopup.reset()}getForm(){return this._formPopup}}const o={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},r=document.querySelector("#modal-edit"),i=document.querySelector("#modal-add"),l=document.querySelector(".profile__add-button"),a=(document.querySelectorAll(".modal__close-button"),document.querySelector(".profile")),c=(a.querySelector(".profile__title"),a.querySelector(".profile__subtitle"),r.querySelector("#name")),u=r.querySelector("#subtitle"),m=(r.querySelector("#modal-form-edit"),i.querySelector("#modal-form-add")),d=(m.querySelector("#add-title"),m.querySelector("#image-url"),document.querySelector(".cards__list"),document.querySelector(".profile__edit-button")),_=document.querySelector(".profile__add-button"),h=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}}({nameSelector:".profile__title",jobSelector:".profile__subtitle"}),p=new n("#modal-edit",(function(e){h.setUserInfo({name:e.name,job:e.subtitle})}));p.setEventListeners();const E=new n("#modal-add",(function(e){g({name:e.title,link:e.url}),E.close(),E.formReset()}));E.setEventListeners();const S=new class extends s{constructor(e){super(e),this._popupElement=document.querySelector(e),this._imageElement=this._popupElement.querySelector(".modal__image-preview"),this._captionElement=this._popupElement.querySelector(".modal__title-preview")}open(e){this._imageElement.src=e.link,this._imageElement.alt=e.name,this._captionElement.textContent=e.name,super.open()}}("#modal-image");S.setEventListeners(),l.addEventListener("click",(()=>{E.open()}));const b=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"}],renderer:g},".cards__list");function g(t){const s=new e(t,"#card-template",((e,t)=>{S.open({name:e,link:t})})).generateCard();b.addItem(s)}b.renderItems(),d.addEventListener("click",(()=>{const e=h.getUserInfo();c.value=e.name,u.value=e.job,p.open()}));const v=document.querySelectorAll(".modal__form"),f={};v.forEach((e=>{const s=new t(o,e),n=e.getAttribute("name");f[n]=s,s.enableValidation()})),_.addEventListener("click",(()=>{E.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,